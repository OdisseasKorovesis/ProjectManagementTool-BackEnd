{"version":3,"sources":["components/Project/CreateProjectButton.js","actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Dashboard.js","securityDetails/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/backlogReducer.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityDetails/SecureRoute.js","App.js","reportWebVitals.js","index.js"],"names":["CreateProjectButton","to","className","GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_CURRENT_USER","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","connect","deleteProject","id","window","confirm","delete","props","identifier","name","description","onClick","state","getProjects","get","res","useEffect","projects","map","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","security","headerLinks","validToken","user","userNotAuthenticated","userIsAuthenticated","href","fullName","location","class","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","errors","useState","setName","setIdentifier","setDescription","startDate","setStartDate","endDate","setEndDate","setErrors","onChange","ev","target","value","onSubmit","preventDefault","newProject","classnames","placeholder","initialState","project_tasks","project_task","combineReducers","action","console","log","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","getProject","useParams","dbId","updatedProject","disabled","deleteProjectTask","backlog_id","pt_id","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","todoItems","task","status","inProgressItems","doneItems","getBacklog","BoardContent","length","projectNotFound","projectIdentifier","role","boardAlgorithm","addProjectTask","setSummary","setAcceptanceCriteria","setStatus","setPriority","dueDate","setDueDate","newTask","getProjectTask","updateProjectTask","patch","projectId","sequence","createdAt","setFieldValues","updatedProjectTask","createNewUser","newUser","username","setUsername","setFullName","password","setPassword","confirmPassword","setConfirmPassword","classNames","login","LoginRequest","setItem","decoded","jwt_decode","Component","component","otherProps","render","jwtToken","decodedJwtToken","currentTime","Date","now","exp","App","exact","path","Landing","Register","Login","SecureRoute","Dashboard","AddProject","UpdateProject","ProjectBoard","AddProjectTask","UpdateProjectTask","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eee4cea3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction CreateProjectButton() {\r\n  return (\r\n    <Link to=\"/addProject\" className=\"btn btn-lg btn-info mx-auto mx-md-0\">\r\n      Create a Project\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default CreateProjectButton;\r\n","export const GET_ERRORS = 'GET_ERRORS';\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async (dispatch) => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/project/single/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = (id) => async (dispatch) => {\r\n  if (\r\n    window.confirm(\r\n      \"Are you sure? This will delete the project and all related data.\"\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id,\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nfunction ProjectItem(props) {\r\n  const { project } = props;\r\n\r\n  const onDeleteClick = (id) => {\r\n    props.deleteProject(id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"card card-body bg-light mb-3\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-2 text-center\">\r\n            <span>{project.identifier}</span>\r\n          </div>\r\n          <div className=\"col-12 col-md-4 col-lg-6\">\r\n            <h3 className=\"text-center\">{project.name}</h3>\r\n            <p className=\"text-center\">{project.description}</p>\r\n          </div>\r\n          <div className=\"col-md-6 col-lg-4\">\r\n            <ul className=\"list-group\">\r\n              <Link to={`/projectBoard/${project.identifier}`}>\r\n                <li className=\"list-group-item board\">\r\n                  <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                </li>\r\n              </Link>\r\n              <Link to={`/updateProject/${project.identifier}`}>\r\n                <li className=\"list-group-item update\">\r\n                  <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                </li>\r\n              </Link>\r\n                <li className=\"list-group-item delete\" onClick={() => onDeleteClick(project.identifier)}>\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteProject })(ProjectItem);\r\n","import CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction Dashboard(props) {\r\n  useEffect(() => {\r\n    props.getProjects();\r\n  }, []);\r\n\r\n  const { projects } = props.project;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 d-flex d-md-block flex-column flex-md-row\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n              <br />\r\n              <hr />\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project}/>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;","import axios from \"axios\";\r\nimport setJWTToken from \"../securityDetails/setJWTToken\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (LoginRequest) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n    const { token } = res.data;\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    setJWTToken(token);\r\n    const decoded = jwt_decode(token);\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  })\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nfunction Header(props) {\r\n  const { validToken, user } = props.security;\r\n\r\n  const userLogout = () => {\r\n    props.logout();\r\n    window.location.href = \"/\";\r\n  };\r\n\r\n  const userNotAuthenticated = (\r\n    <div\r\n      className=\"collapse navbar-collapse justify-content-end\"\r\n      id=\"navbarNav\"\r\n    >\r\n      <ul className=\"navbar-nav ml-auto\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/register\">\r\n            Sign Up\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/login\">\r\n            Login\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n\r\n  const userIsAuthenticated = (\r\n    <div\r\n      className=\"collapse navbar-collapse justify-content-end\"\r\n      id=\"navbarNav\"\r\n    >\r\n      <ul className=\"navbar-nav mr-auto\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/dashboard\">\r\n            Dashboard\r\n          </a>\r\n        </li>\r\n      </ul>\r\n\r\n      <ul className=\"navbar-nav ml-auto\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/dashboard\">\r\n            <i className=\"fas fa-user-circle mr1\" /> {user.fullName}\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/logout\" onClick={userLogout}>\r\n            Logout\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n\r\n  let headerLinks;\r\n\r\n  if (validToken && user) {\r\n    headerLinks = userIsAuthenticated;\r\n  } else {\r\n    headerLinks = userNotAuthenticated;\r\n  }\r\n\r\n  return (\r\n    <nav class=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n      <div class=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          Personal Project Management Tool\r\n        </Link>\r\n        <button\r\n          class=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        {headerLinks}\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nfunction AddProject(props) {\r\n  const [name, setName] = useState(\"\");\r\n  const [identifier, setIdentifier] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    setErrors(props.errors);\r\n  }, [props.errors]);\r\n\r\n  const onChange = (ev) => {\r\n    switch (ev.target.name) {\r\n      case \"name\":\r\n        setName(ev.target.value);\r\n        break;\r\n      case \"identifier\":\r\n        setIdentifier(ev.target.value);\r\n        break;\r\n      case \"description\":\r\n        setDescription(ev.target.value);\r\n        break;\r\n      case \"startDate\":\r\n        setStartDate(ev.target.value);\r\n        break;\r\n      case \"endDate\":\r\n        setEndDate(ev.target.value);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onSubmit = (ev) => {\r\n    ev.preventDefault();\r\n    const newProject = {\r\n      name: name,\r\n      identifier: identifier,\r\n      description: description,\r\n      startDate: startDate,\r\n      endDate: endDate,\r\n    };\r\n\r\n    props.createProject(newProject, props.history);\r\n  };\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8 m-auto\">\r\n            <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n            <hr />\r\n            <form onSubmit={onSubmit}>\r\n              <div className=\"form-group mt-3\">\r\n                <input\r\n                  type=\"text\"\r\n                  className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": errors.name,\r\n                  })}\r\n                  placeholder=\"Project Name\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  onChange={onChange}\r\n                />\r\n                {errors.name && (\r\n                  <div className=\"invalid-feedback\">{errors.name}</div>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group mt-3\">\r\n                <input\r\n                  type=\"text\"\r\n                  className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": errors.identifier,\r\n                  })}\r\n                  placeholder=\"Unique Project ID\"\r\n                  name=\"identifier\"\r\n                  value={identifier}\r\n                  onChange={onChange}\r\n                />\r\n                {errors.identifier && (\r\n                  <div className=\"invalid-feedback\">{errors.identifier}</div>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group mt-3\">\r\n                <textarea\r\n                  className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": errors.description,\r\n                  })}\r\n                  placeholder=\"Project Description\"\r\n                  name=\"description\"\r\n                  value={description}\r\n                  onChange={onChange}\r\n                ></textarea>\r\n                {errors.description && (\r\n                  <div className=\"invalid-feedback\">{errors.description}</div>\r\n                )}\r\n              </div>\r\n              <h6 className=\"mt-3\">Start Date</h6>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"date\"\r\n                  className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": errors.startDate,\r\n                  })}\r\n                  name=\"startDate\"\r\n                  value={startDate}\r\n                  onChange={onChange}\r\n                />\r\n                {errors.startDate && (\r\n                  <div className=\"invalid-feedback\">{errors.startDate}</div>\r\n                )}\r\n              </div>\r\n              <h6 className=\"mt-3\">Estimated End Date</h6>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"date\"\r\n                  className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": errors.endDate,\r\n                  })}\r\n                  name=\"endDate\"\r\n                  value={endDate}\r\n                  onChange={onChange}\r\n                />\r\n                {errors.endDate && (\r\n                  <div className=\"invalid-feedback\">{errors.endDate}</div>\r\n                )}\r\n              </div>\r\n\r\n              <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload,\r\n      };\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload,\r\n      };\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          (project_task) => project_task.projectSequence !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      console.log(action.payload);\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload,\r\n      };\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload,\r\n      };\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          (project) => project.identifier !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  validToken: false,\r\n};\r\n\r\nconst booleanActionPayload = (payload) => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: true,\r\n        user: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nfunction UpdateProject(props) {\r\n  console.log(props)\r\n  \r\n  const { id } = useParams();\r\n\r\n  const [dbId, setDbId] = useState(props.project.id);\r\n  const [name, setName] = useState(props.project.name);\r\n  const [identifier, setIdentifier] = useState(props.project.identifier);\r\n  const [description, setDescription] = useState(props.project.description);\r\n  const [startDate, setStartDate] = useState(props.project.startDate);\r\n  const [endDate, setEndDate] = useState(props.project.endDate);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    props.getProject(id, props.history);\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    setErrors(props.errors);\r\n  }, [props.errors])\r\n\r\n  const onChange = (ev) => {\r\n    switch (ev.target.name) {\r\n      case \"name\":\r\n        setName(ev.target.value);\r\n        break;\r\n      case \"identifier\":\r\n        setIdentifier(ev.target.value);\r\n        break;\r\n      case \"description\":\r\n        setDescription(ev.target.value);\r\n        break;\r\n      case \"startDate\":\r\n        setStartDate(ev.target.value);\r\n        break;\r\n      case \"endDate\":\r\n        setEndDate(ev.target.value);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onSubmit = (ev) => {\r\n    ev.preventDefault();\r\n    const updatedProject = {\r\n      id: dbId,\r\n      name: name,\r\n      identifier: identifier,\r\n      description: description,\r\n      startDate: startDate,\r\n      endDate: endDate,\r\n    };\r\n\r\n    props.createProject(updatedProject, props.history);\r\n  };\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8 m-auto\">\r\n            <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n            <hr />\r\n            <form onSubmit={onSubmit}>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": errors.name,\r\n                  })}\r\n                  placeholder=\"Project Name\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  onChange={onChange}\r\n                />\r\n                {errors.name && (\r\n                    <div className=\"invalid-feedback\">{errors.name}</div>\r\n                  )}\r\n              </div>\r\n              <div className=\"form-group mt-3\">\r\n                <input\r\n                  type=\"text\"\r\n                  className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": errors.identifier,\r\n                  })}\r\n                  placeholder=\"Unique Project ID\"\r\n                  name=\"identifier\"\r\n                  value={identifier}\r\n                  onChange={onChange}\r\n                  disabled\r\n                />\r\n                {errors.identifier && (\r\n                    <div className=\"invalid-feedback\">{errors.identifier}</div>\r\n                  )}\r\n              </div>\r\n              <div className=\"form-group mt-3\">\r\n                <textarea\r\n                className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": errors.description,\r\n                  })}\r\n                  placeholder=\"Project Description\"\r\n                  name=\"description\"\r\n                  value={description}\r\n                  onChange={onChange}\r\n                ></textarea>\r\n                {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n              </div>\r\n              <h6 className=\"mt-3\">Start Date</h6>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"date\"\r\n                  className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": errors.startDate,\r\n                  })}\r\n                  name=\"startDate\"\r\n                  value={startDate}\r\n                  onChange={onChange}\r\n                />\r\n                {errors.startDate && (\r\n                    <div className=\"invalid-feedback\">{errors.startDate}</div>\r\n                  )}\r\n              </div>\r\n              <h6 className=\"mt-3\">Estimated End Date</h6>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"date\"\r\n                  className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": errors.endDate,\r\n                  })}\r\n                  name=\"endDate\"\r\n                  value={endDate}\r\n                  onChange={onChange}\r\n                />\r\n                {errors.endDate && (\r\n                    <div className=\"invalid-feedback\">{errors.endDate}</div>\r\n                  )}\r\n              </div>\r\n\r\n              <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(\r\n  UpdateProject\r\n);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction ProjectTask(props) {\r\n  const project_task = props.project_task;\r\n\r\n  let priorityString;\r\n  let priorityClass;\r\n\r\n  if (project_task.priority === 1) {\r\n    priorityClass = \"bg-danger text-light\";\r\n    priorityString = \"HIGH\";\r\n  } else if (project_task.priority === 2) {\r\n    priorityClass = \"bg-warning text-light\";\r\n    priorityString = \"MEDIUM\";\r\n  } else {\r\n    priorityClass = \"bg-info text-light\";\r\n    priorityString = \"LOW\";\r\n  }\r\n\r\n  const onDeleteClick = (backlog_id, pt_id) => {\r\n    props.deleteProjectTask(backlog_id, pt_id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card mb-1 bg-light\">\r\n      <div className={`card-header text-primary ${priorityClass}`}>\r\n        ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n      </div>\r\n      <div className=\"card-body bg-light\">\r\n        <h5 className=\"card-title\">{project_task.summary}</h5>\r\n        <p className=\"card-text text-truncate \">\r\n          {project_task.acceptanceCriteria}\r\n        </p>\r\n        <Link\r\n          to={`/updateProjectTask/${project_task.identifier}/${project_task.projectSequence}`}\r\n          className=\"btn btn-primary\"\r\n        >\r\n          View / Update\r\n        </Link>\r\n\r\n        <button\r\n          className=\"btn btn-danger ml-4\"\r\n          onClick={() => onDeleteClick(\r\n            project_task.identifier,\r\n            project_task.projectSequence\r\n          )}\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteProjectTask })(ProjectTask);\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT, DELETE_PROJECT_TASK } from \"./types\";\r\n\r\nexport const addProjectTask =\r\n  (backlog_id, project_task, history) => async (dispatch) => {\r\n    try {\r\n      await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n      history.push(`/projectBoard/${backlog_id}`);\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {},\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const getBacklog = (backlog_id) => async (dispatch) => {\r\n  try {\r\n    console.log(\"mpike\");\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n    console.log(res);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask =\r\n  (backlog_id, pt_id, history) => async (dispatch) => {\r\n    try {\r\n      const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n      dispatch({\r\n        type: GET_PROJECT_TASK,\r\n        payload: res.data,\r\n      });\r\n      console.log('teleiose')\r\n      return res;\r\n    } catch (err) {\r\n      console.log(err);\r\n      history.push(\"/dashboard\");\r\n    }\r\n  };\r\n\r\nexport const updateProjectTask =\r\n  (backlog_id, pt_id, project_task, history) => async (dispatch) => {\r\n    try {\r\n      const res = await axios.patch(\r\n        `/api/backlog/${backlog_id}/${pt_id}`,\r\n        project_task\r\n      );\r\n      history.push(`/projectBoard/${backlog_id}`);\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {},\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async (dispatch) => {\r\n  if (\r\n    window.confirm(\r\n      `You are deleting project task ${pt_id}, this action cannot be undone.`\r\n    )\r\n  );\r\n  await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n  dispatch({\r\n    type: DELETE_PROJECT_TASK,\r\n    payload: pt_id\r\n  })\r\n};\r\n","import { useEffect } from \"react\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\n\r\nfunction Backlog(props) {\r\n  const { project_tasks } = props.project_tasks;\r\n  console.log(props.project_tasks);\r\n\r\n  const tasks = project_tasks.map((project_task) => (\r\n    <ProjectTask key={project_task.id} project_task={project_task} />\r\n  ));\r\n\r\n  console.log(props.project_tasks);\r\n  let todoItems = tasks.filter((task) => task.props.project_task.status === \"TO_DO\");\r\n  let inProgressItems = tasks.filter((task) => task.props.project_task.status === \"IN_PROGRESS\");;\r\n  let doneItems = tasks.filter((task) => task.props.project_task.status === \"DONE\");;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-center mb-2\">\r\n            <div className=\"card-header bg-secondary text-white\">\r\n              <h3>TO DO</h3>\r\n            </div>\r\n          </div>\r\n          {todoItems}\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-center mb-2\">\r\n            <div className=\"card-header bg-primary text-white\">\r\n              <h3>In Progress</h3>\r\n            </div>\r\n          </div>\r\n          {inProgressItems}\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-center mb-2\">\r\n            <div className=\"card-header bg-success text-white\">\r\n              <h3>Done</h3>\r\n            </div>\r\n          </div>\r\n          {doneItems}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Backlog;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\n\r\nfunction ProjectBoard(props) {\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    props.getBacklog(id);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.errors) {\r\n      setErrors(props.errors);\r\n    }\r\n  }, [props]);\r\n\r\n  let BoardContent;\r\n  const project_tasks = props.backlog;\r\n\r\n  const boardAlgorithm = (errors, project_tasks) => {\r\n    console.log(project_tasks.project_tasks)\r\n    if (project_tasks.project_tasks.length < 1) {\r\n      if (errors.projectNotFound || errors.projectIdentifier) {\r\n        return (\r\n          <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n            {errors.projectNotFound ? errors.projectNotFound : errors.projectIdentifier}\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n        <div className=\"alert alert-info text-center\" role=\"alert\">\r\n          No project tasks on this board.\r\n        </div>)\r\n      }\r\n    } else {\r\n      return <Backlog project_tasks={props.backlog} />;\r\n    }\r\n  };\r\n\r\n  BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n        <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n      </Link>\r\n      <br />\r\n      <hr />\r\n      {BoardContent}\r\n    </div>\r\n  );\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStatetoProps, { getBacklog })(ProjectBoard);\r\n","import { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction AddProjectTask(props) {\r\n  const { id } = useParams();\r\n\r\n  const [summary, setSummary] = useState(\"\");\r\n  const [acceptanceCriteria, setAcceptanceCriteria] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [priority, setPriority] = useState(0);\r\n  const [dueDate, setDueDate] = useState(\"\");\r\n  const [projectIdentifier, setProjectIdentifier] = useState(id);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    setErrors(props.errors);\r\n  }, [props.errors]);\r\n\r\n  const onChange = (ev) => {\r\n    switch (ev.target.name) {\r\n      case \"summary\":\r\n        setSummary(ev.target.value);\r\n        break;\r\n      case \"acceptanceCriteria\":\r\n        setAcceptanceCriteria(ev.target.value);\r\n        break;\r\n      case \"status\":\r\n        setStatus(ev.target.value);\r\n        break;\r\n      case \"priority\":\r\n        setPriority(ev.target.value);\r\n        break;\r\n      case \"dueDate\":\r\n        setDueDate(ev.target.value);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onSumbit = (ev) => {\r\n    ev.preventDefault();\r\n    const newTask = {\r\n      summary: summary,\r\n      acceptanceCriteria: acceptanceCriteria,\r\n      status: status,\r\n      priority: priority,\r\n      dueDate: dueDate,\r\n    };\r\n    props.addProjectTask(projectIdentifier, newTask, props.history);\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-PBI\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8 m-auto\">\r\n            <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n              Back to Project Board\r\n            </Link>\r\n            <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n            <p className=\"lead text-center\">Project Name + Project Code</p>\r\n            <form onSubmit={onSumbit}>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": errors.summary,\r\n                  })}\r\n                  name=\"summary\"\r\n                  value={summary}\r\n                  onChange={onChange}\r\n                  placeholder=\"Project Task summary\"\r\n                />\r\n                {errors.summary && (\r\n                  <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group mt-3\">\r\n                <textarea\r\n                className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": errors.acceptanceCriteria,\r\n                  })}\r\n                  placeholder=\"Acceptance Criteria\"\r\n                  name=\"acceptanceCriteria\"\r\n                  value={acceptanceCriteria}\r\n                  onChange={onChange}\r\n                ></textarea>\r\n                {errors.acceptanceCriteria && (\r\n                    <div className=\"invalid-feedback\">{errors.acceptanceCriteria}</div>\r\n                  )}\r\n              </div>\r\n              <h6 className=\"mt-3\">Due Date</h6>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"date\"\r\n                  className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": errors.dueDate,\r\n                  })}\r\n                  name=\"dueDate\"\r\n                  value={dueDate}\r\n                  onChange={onChange}\r\n                />\r\n                {errors.dueDate && (\r\n                    <div className=\"invalid-feedback\">{errors.dueDate}</div>\r\n                  )}\r\n              </div>\r\n              <div className=\"form-group mt-3\">\r\n                <select\r\n                className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": errors.priority,\r\n                  })}\r\n                  name=\"priority\"\r\n                  value={priority}\r\n                  onChange={onChange}\r\n                >\r\n                  <option value={0}>Select Priority</option>\r\n                  <option value={1}>High</option>\r\n                  <option value={2}>Medium</option>\r\n                  <option value={3}>Low</option>\r\n                </select>\r\n                {errors.priority && (\r\n                    <div className=\"invalid-feedback\">{errors.priority}</div>\r\n                  )}\r\n              </div>\r\n\r\n              <div className=\"form-group mt-3\">\r\n                <select\r\n                className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": errors.status,\r\n                  })}\r\n                  name=\"status\"\r\n                  value={status}\r\n                  onChange={onChange}\r\n                >\r\n                  <option value=\"\">Select Status</option>\r\n                  <option value=\"TO_DO\">TO DO</option>\r\n                  <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                  <option value=\"DONE\">DONE</option>\r\n                </select>\r\n                {errors.status && (\r\n                    <div className=\"invalid-feedback\">{errors.status}</div>\r\n                  )}\r\n              </div>\r\n\r\n              <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\r\n","import { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask,\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\nfunction UpdateProjectTask(props) {\r\n  const [projectId, setProjectId] = useState(props.project_task.id);\r\n  const [projectSequence, setProjectSequence] = useState(\r\n    props.project_task.sequence\r\n  );\r\n  const [summary, setSummary] = useState(\"\");\r\n  const [acceptanceCriteria, setAcceptanceCriteria] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [priority, setPriority] = useState(\"\");\r\n  const [dueDate, setDueDate] = useState(\"\");\r\n  const [identifier, setIdentifier] = useState(props.project_task.identifier);\r\n  const [createdAt, setCreatedAt] = useState(props.project_task.createdAt);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { id, sequence } = useParams();\r\n\r\n  const setFieldValues = async () => {\r\n    const res = await props.getProjectTask(id, sequence, props.history);\r\n    setSummary(res.data.summary);\r\n    setAcceptanceCriteria(res.data.acceptanceCriteria);\r\n    setDueDate(res.data.dueDate);\r\n    setPriority(res.data.priority);\r\n    setStatus(res.data.status);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFieldValues();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setErrors(props.errors);\r\n  }, [props.errors]);\r\n\r\n  const onChange = (ev) => {\r\n    switch (ev.target.name) {\r\n      case \"summary\":\r\n        setSummary(ev.target.value);\r\n        break;\r\n      case \"acceptanceCriteria\":\r\n        setAcceptanceCriteria(ev.target.value);\r\n        break;\r\n      case \"dueDate\":\r\n        setDueDate(ev.target.value);\r\n        break;\r\n      case \"status\":\r\n        setStatus(ev.target.value);\r\n        break;\r\n      case \"priority\":\r\n        setPriority(ev.target.value);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onSubmit = (ev) => {\r\n    ev.preventDefault();\r\n    const updatedProjectTask = {\r\n      id: projectId,\r\n      sequence: sequence,\r\n      summary: summary,\r\n      acceptanceCriteria: acceptanceCriteria,\r\n      status: status,\r\n      priority: priority,\r\n      dueDate: dueDate,\r\n      identifier: identifier,\r\n      createdAt: createdAt,\r\n    };\r\n\r\n    props.updateProjectTask(\r\n      identifier,\r\n      sequence,\r\n      updatedProjectTask,\r\n      props.history\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-PBI\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8 m-auto\">\r\n            <Link to={`/projectBoard/${identifier}`} className=\"btn btn-light\">\r\n              Back to Project Board\r\n            </Link>\r\n            <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n            <p className=\"lead text-center\">\r\n              Project Name: {id} || Project Task ID: {sequence}\r\n            </p>\r\n            <form onSubmit={onSubmit}>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": errors.summary,\r\n                  })}\r\n                  name=\"summary\"\r\n                  placeholder=\"Project Task summary\"\r\n                  value={summary}\r\n                  onChange={onChange}\r\n                />\r\n                {errors.summary && (\r\n                  <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group mt-3\">\r\n                <textarea\r\n                  className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": errors.acceptanceCriteria,\r\n                  })}\r\n                  placeholder=\"Acceptance Criteria\"\r\n                  name=\"acceptanceCriteria\"\r\n                  value={acceptanceCriteria}\r\n                  onChange={onChange}\r\n                ></textarea>\r\n                {errors.acceptanceCriteria && (\r\n                  <div className=\"invalid-feedback\">\r\n                    {errors.acceptanceCriteria}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <h6 className=\"mt-3\">Due Date</h6>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"date\"\r\n                  className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": errors.dueDate,\r\n                  })}\r\n                  name=\"dueDate\"\r\n                  value={dueDate}\r\n                  onChange={onChange}\r\n                />\r\n                {errors.dueDate && (\r\n                  <div className=\"invalid-feedback\">{errors.dueDate}</div>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group mt-3\">\r\n                <select\r\n                  className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": errors.priority,\r\n                  })}\r\n                  name=\"priority\"\r\n                  value={priority}\r\n                  onChange={onChange}\r\n                >\r\n                  <option value={0}>Select Priority</option>\r\n                  <option value={1}>High</option>\r\n                  <option value={2}>Medium</option>\r\n                  <option value={3}>Low</option>\r\n                </select>\r\n                {errors.priority && (\r\n                  <div className=\"invalid-feedback\">{errors.priority}</div>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"form-group mt-3\">\r\n                <select\r\n                  className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": errors.status,\r\n                  })}\r\n                  name=\"status\"\r\n                  value={status}\r\n                  onChange={onChange}\r\n                >\r\n                  <option value=\"\">Select Status</option>\r\n                  <option value=\"TO_DO\">TO DO</option>\r\n                  <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                  <option value=\"DONE\">DONE</option>\r\n                </select>\r\n                {errors.status && (\r\n                  <div className=\"invalid-feedback\">{errors.status}</div>\r\n                )}\r\n              </div>\r\n\r\n              <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStatetoProps, { getProjectTask, updateProjectTask })(\r\n  UpdateProjectTask\r\n);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction Landing(props) {\r\n  useEffect(() => {\r\n    if (props.security.validToken) {\r\n      props.history.push(\"/dashboard\");\r\n    }\r\n  }, [props.security]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects or start your own\r\n                </p>\r\n                <hr />\r\n                <div className=\"row flex-column flex-md-row justify-content-md-around\">\r\n                  <Link\r\n                    to=\"/register\"\r\n                    className=\"btn btn-lg btn-primary mr-4 col-8 col-md-2 mx-auto mx-md-0 mb-2 mb-md-0\"\r\n                  >\r\n                    Sign Up\r\n                  </Link>\r\n                  <Link to=\"/login\" className=\"btn btn-lg btn-secondary col-8 col-md-2 mx-auto mx-md-0\">\r\n                    Login\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Register(props) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    setErrors(props.errors);\r\n  }, [props.errors]);\r\n\r\n  useEffect(() => {\r\n    if (props.security.validToken) {\r\n      props.history.push(\"/dashboard\");\r\n    }\r\n  }, [props.security]);\r\n\r\n  const onChange = (ev) => {\r\n    switch (ev.target.name) {\r\n      case \"username\":\r\n        setUsername(ev.target.value);\r\n        break;\r\n      case \"fullName\":\r\n        setFullName(ev.target.value);\r\n        break;\r\n      case \"password\":\r\n        setPassword(ev.target.value);\r\n        break;\r\n      case \"confirmPassword\":\r\n        setConfirmPassword(ev.target.value);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onSubmit = (ev) => {\r\n    ev.preventDefault();\r\n    const newUser = {\r\n      username: username,\r\n      fullName: fullName,\r\n      password: password,\r\n      confirmPassword: confirmPassword,\r\n    };\r\n\r\n    props.createNewUser(newUser, props.history);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-10 col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullName,\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    value={fullName}\r\n                    onChange={onChange}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control form-control-lg mt-4\", {\r\n                      \"is-invalid\": errors.username,\r\n                    })}\r\n                    placeholder=\"Email Address (Username)\"\r\n                    name=\"username\"\r\n                    value={username}\r\n                    onChange={onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classNames(\"form-control form-control-lg mt-4\", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classNames(\"form-control form-control-lg mt-4\", {\r\n                      \"is-invalid\": errors.confirmPassword,\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={confirmPassword}\r\n                    onChange={onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStatetoProps, { createNewUser })(Register);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction Login(props) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (props.security.validToken) {\r\n      props.history.push(\"/dashboard\");\r\n    }\r\n  }, [props.security]);\r\n\r\n  useEffect(() => {\r\n    setErrors(props.errors);\r\n  }, [props.errors]);\r\n\r\n  const onChange = (ev) => {\r\n    switch (ev.target.name) {\r\n      case \"username\":\r\n        setUsername(ev.target.value);\r\n        break;\r\n      case \"password\":\r\n        setPassword(ev.target.value);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onSubmit = (ev) => {\r\n    ev.preventDefault();\r\n    const LoginRequest = {\r\n      username: username,\r\n      password: password,\r\n    };\r\n\r\n    props.login(LoginRequest);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-10 col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control form-control-lg mt-4\", {\r\n                      \"is-invalid\": errors.username,\r\n                    })}\r\n                    placeholder=\"Username\"\r\n                    name=\"username\"\r\n                    value={username}\r\n                    onChange={onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classNames(\"form-control form-control-lg mt-4\", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Component } from \"react\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={(props) =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityDetails/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecureRoute from \"./securityDetails/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decodedJwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decodedJwtToken,\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decodedJwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          {\n            //public routes\n          }\n\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n\n          {\n            //private routes\n          }\n          <Switch>\n            <SecureRoute exact path=\"/dashboard\" component={Dashboard} />\n            <SecureRoute exact path=\"/addProject\" component={AddProject} />\n            <SecureRoute\n              exact\n              path=\"/updateProject/:id\"\n              component={UpdateProject}\n            />\n            <SecureRoute\n              exact\n              path=\"/projectBoard/:id\"\n              component={ProjectBoard}\n            />\n            <SecureRoute\n              exact\n              path=\"/addProjectTask/:id\"\n              component={AddProjectTask}\n            />\n            <SecureRoute\n              exact\n              path=\"/updateProjectTask/:id/:sequence\"\n              component={UpdateProjectTask}\n            />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}